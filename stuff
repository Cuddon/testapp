





Centre a block


.center-block {
    margin-left: auto;
    margin-right: auto;
    display: black

}




Shadows


A z-depth-0 can be used to remove shadows from elements that have z-depths by default.
See http://materializecss.com/shadow.html


// TopNav
// Perhaps add a second row and change its color to white.


// Color

body: #fafafa /*Materilaize: grey lighten-5 */
jumbotron etc: #f5f5f5 /* Materialize grey lighten-4 */


Andrew Cuddon | Senior Program Manager
Australian Unity Limited
114 Albert Road | South Melbourne  VIC  3205
T +613 8682  6052 | M 0409 093 963
W www.australianunity.com.au<http://www.australianunity.com.au/>
E acuddon@australianunity.com.au<mailto:acuddon@australianunity.com.au>
[cid:image002.jpg@01D0C3B9.590A07A0]<http://intranet.australianunity.net.au/prj/hris/Pages/home.aspx>



/**
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

html, body {
  font-family: 'Roboto', 'Helvetica', sans-serif;
  margin: 0;
  padding: 0;
}
.mdl-demo .mdl-layout__header-row {
  padding-left: 40px;
}
.mdl-demo .mdl-layout.is-small-screen .mdl-layout__header-row h3 {
  font-size: inherit;
}
.mdl-demo .mdl-layout__tab-bar-button {
  display: none;
}
.mdl-demo .mdl-layout.is-small-screen .mdl-layout__tab-bar .mdl-button {
  display: none;
}
.mdl-demo .mdl-layout:not(.is-small-screen) .mdl-layout__tab-bar,
.mdl-demo .mdl-layout:not(.is-small-screen) .mdl-layout__tab-bar-container {
  overflow: visible;
}
.mdl-demo .mdl-layout__tab-bar-container {
  height: 64px;
}
.mdl-demo .mdl-layout__tab-bar {
  padding: 0;
  padding-left: 16px;
  box-sizing: border-box;
  height: 100%;
  width: 100%;
}
.mdl-demo .mdl-layout__tab-bar .mdl-layout__tab {
  height: 64px;
  line-height: 64px;
}
.mdl-demo .mdl-layout__tab-bar .mdl-layout__tab.is-active::after {
  background-color: white;
  height: 4px;
}
.mdl-demo main > .mdl-layout__tab-panel {
  padding: 8px;
  padding-top: 48px;
}



.mdl-demo .mdl-card {
  height: auto;
  display: flex;
  flex-direction: column;
}
.mdl-demo .mdl-card > * {
  height: auto;
}
.mdl-demo .mdl-card .mdl-card__supporting-text {
  margin: 40px;
  flex-grow: 1;
  padding: 0;
  color: inherit;
  width: calc(100% - 80px);
}
.mdl-demo.mdl-demo .mdl-card__supporting-text h4 {
  margin-top: 0;
  margin-bottom: 20px;
}
.mdl-demo .mdl-card__actions {
  margin: 0;
  padding: 4px 40px;
  color: inherit;
}
.mdl-demo .mdl-card__actions a {
  color: #00BCD4;
  margin: 0;
}
.mdl-demo .mdl-card__actions a:hover,
.mdl-demo .mdl-card__actions a:active {
  color: inherit;
  background-color: transparent;
}
.mdl-demo .mdl-card__supporting-text + .mdl-card__actions {
  border-top: 1px solid rgba(0, 0, 0, 0.12);
}
.mdl-demo #add {
  position: absolute;
  right: 40px;
  top: 36px;
  z-index: 999;
}

.mdl-demo .mdl-layout__content section:not(:last-of-type) {
  position: relative;
  margin-bottom: 48px;
}
.mdl-demo section.section--center {
  max-width: 860px;
}
.mdl-demo #features section.section--center {
  max-width: 620px;
}
.mdl-demo section > header{
  display: flex;
  align-items: center;
  justify-content: center;
}
.mdl-demo section > .section__play-btn {
  min-height: 200px;
}
.mdl-demo section > header > .material-icons {
  font-size: 3rem;
}
.mdl-demo section > button {
  position: absolute;
  z-index: 99;
  top: 8px;
  right: 8px;
}
.mdl-demo section .section__circle {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  flex-grow: 0;
  flex-shrink: 1;
}
.mdl-demo section .section__text {
  flex-grow: 1;
  flex-shrink: 0;
  padding-top: 8px;
}
.mdl-demo section .section__text h5 {
  font-size: inherit;
  margin: 0;
  margin-bottom: 0.5em;
}
.mdl-demo section .section__text a {
  text-decoration: none;
}
.mdl-demo section .section__circle-container > .section__circle-container__circle {
  width: 64px;
  height: 64px;
  border-radius: 32px;
  margin: 8px 0;
}
.mdl-demo section.section--footer .section__circle--big {
  width: 100px;
  height: 100px;
  border-radius: 50px;
  margin: 8px 32px;
}
.mdl-demo .is-small-screen section.section--footer .section__circle--big {
  width: 50px;
  height: 50px;
  border-radius: 25px;
  margin: 8px 16px;
}
.mdl-demo section.section--footer {
  padding: 64px 0;
  margin: 0 -8px -8px -8px;
}
.mdl-demo section.section--center .section__text:not(:last-child) {
  border-bottom: 1px solid rgba(0,0,0,.13);
}
.mdl-demo .mdl-card .mdl-card__supporting-text > h3:first-child {
  margin-bottom: 24px;
}
.mdl-demo .mdl-layout__tab-panel:not(#overview) {
  background-color: white;
}
.mdl-demo #features section {
  margin-bottom: 72px;
}
.mdl-demo #features h4, #features h5 {
  margin-bottom: 16px;
}
.mdl-demo .toc {
  border-left: 4px solid #C1EEF4;
  margin: 24px;
  padding: 0;
  padding-left: 8px;
  display: flex;
  flex-direction: column;
}
.mdl-demo .toc h4 {
  font-size: 0.9rem;
  margin-top: 0;
}
.mdl-demo .toc a {
  color: #4DD0E1;
  text-decoration: none;
  font-size: 16px;
  line-height: 28px;
  display: block;
}
.mdl-demo .mdl-menu__container {
  z-index: 99;
}





----------------
Dropdown menus

<ul class="dropdown-menu" aria-labelledby="dropdownMenuDivider">
  <li class="disabled"><a href="#">Disabled link</a></li>
  <li role="separator" class="divider"></li>
  <li><a href="#">Another link</a></li>
</ul>


NAVBAR
Wrap strings of text in an element with .navbar-text, usually on a <p> tag for proper leading and color.
<p class="navbar-text">Signed in as Mark Otto</p>


BREADCRUMBS
<ol class="breadcrumb">
  <li><a href="#">Home</a></li>
  <li><a href="#">Library</a></li>
  <li class="active">Data</li>
</ol>



PROJECT ITEM
<div class="row">
  <div class="col-sm-6 col-md-4">
    <div class="thumbnail">
      <img src="..." alt="...">
      <div class="caption">
        <h3>Thumbnail label</h3>
        <p>...</p>
        <p><a href="#" class="btn btn-primary" role="button">Button</a> <a href="#" class="btn btn-default" role="button">Button</a></p>
      </div>
    </div>
  </div>
</div>


Dismissible alert
<div class="alert alert-warning alert-dismissible" role="alert">
 <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
  <strong>Warning!</strong> Better check yourself, you're not looking too good.
</div>


http://getbootstrap.com/customize/



Andrew Cuddon | Senior Program Manager
Australian Unity Limited
114 Albert Road | South Melbourne  VIC  3205
T +613 8682  6052 | M 0409 093 963
W www.australianunity.com.au<http://www.australianunity.com.au/>
E acuddon@australianunity.com.au<mailto:acuddon@australianunity.com.au>
[cid:image002.jpg@01D0B4A8.30008430]<http://intranet.australianunity.net.au/prj/hris/Pages/home.aspx>




//Define a new Collection on both the client and the server
ProjectsCollection = new Mongo.Collection("projects");


// Publish and Subscribe
/*
Use Meteor.publish and Meteor.subscribe to control what documents flow from the server to its clients

Meteor servers can publish sets of documents with Meteor.publish, and clients can subscribe to those publications with Meteor.subscribe. Any documents the client subscribes to will be available through the find method of client collections.

Clients call Meteor.subscribe to express interest in document collections published by the server. Clients can further filter these collections of documents by calling collection.find(query). Whenever any data that was accessed by a publish function changes on the server, the publish function is automatically rerun and the updated document collections are pushed to the subscribed client.
*/

//Server
// Publish all projects owned by the user or shared to them by others
Meteor.publish("posts", function () {
  return Posts.find({
    $or: [
      { sharedToMe: {$eq: true} },
      { createdBy: this.userId }
    ]
  });
});

// Publish a single project
Meteor.publish("project", function (postId) {
  // Check argument
  check(postId, String);

  return Posts.find({
    _id: postId,
  });
});


// Client

// Subscribe to the data published by the server
Meteor.subscribe("posts");

Meteor.subscribe("posts", id);

// Any documents the client subscribes to will be available through the find method of client collections.

Templates.projects_list_template.Helpers({
    projectslist: function() {
        Return ProjectsCollection.find()
    },
    Project: function(id) {
        Return ProjectCollection
    }
});


#####

// Pass data into a template

{{> message text='Message text'}}


or

Template.messages.helpers({
  messages: [
    { text: "All these messages" },
    { text: "Uses the same template" },
    { text: "But have a different data context" },
    { text: "It's why these messages are all different!" },
    { text: "Hey!" },
    { text: "What's up man!" },
    { text: "Hello" }
  ]
});

{{#each messages}}
    {{> message text=text}}
{{/each}}


-----------
Meteor Simple Schema

------------------
//Define a new Collection on both the client and the server
Messages = new Mongo.Collection("messages");

// Insert a document
Messages.insert({greeting: "hello"}, function() {});

// Mongo shell inside meteor
meteor mongo
show databases
-> You should see a meteor database
show collections
-> should see a messages Collection

// Display all documents in the messages collection
db.messages.find()



--------------------
If you want to delete your entire database and start from scratch, quit your application and run meteor reset

Robomongo is the MongoDB management tool.

-------------------------------
