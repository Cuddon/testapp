#!/usr/bin/env bash
# /etc/init/testapp.conf
# upstart script. Runs the App as a daemon, including managing PID files etc
# Tested on Ubuntu Server 14.04 LTS
# usage:
#   sudo start|stop|status testapp

# Output to /var/log/upstart/testapp.log
console log

description "Upstart script to run a Meteor (dev) app as a service or daemon"
author "Andrew Cuddon"
version "1.0"

env VM=/usr/local/bin/meteor
env APP_DIR=/home/andrew/Documents/Development/testapp
env SCRIPT_FILE=""
enf NAME=testapp

# Start as root and drop privileges to user:
env USER="andrew"
env GROUP="andrew"

# Start service on startup, stop on shutdown
start on filesystem and net-device-up IFACE=eth0 and started docker
stop on runlevel [!2345]

# Automatically restart process if crashed
respawn
respawn limit 10 5

# Essentially lets upstart know the process will detach itself to the background
expect fork

pre-start script
    DATETIME=`/bin/date +%D-%I:%M:%S`
    echo "===== Upstart: Preparing script: $UPSTART_JOB: $DATETIME ====="
    # Remove an existing log file
    if [ -f /var/log/upstart/$UPSTART_JOB.log ]; then
        rm /var/log/upstart/$UPSTART_JOB.log
        echo "===== Upstart: Preparing script: $UPSTART_JOB: $DATETIME ====="
        echo "Existing logile deleted"
    fi
end script

# Main process to daemonise
exec start-stop-daemon --start --make-pidfile --pidfile /var/run/$UPSTART_JOB.pid --chuid $USER:$GROUP --chdir $APP_DIR --name $NAME--exec $VM $SCRIPT_FILE

post-start script
    # Script or process to run after the main process has been spawned, but before the started(7) event has been emitted
    DATETIME=`/bin/date +%D-%I:%M:%S`
    echo "===== Upstart: $UPSTART_JOB started: $DATETIME ====="
end script

post-stop script
    DATETIME=`/bin/date +%D-%I:%M:%S`
    echo "===== Upstart: $UPSTART_JOB stopped: $DATETIME ====="
end script


